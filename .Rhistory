x <- seq(-10, 10, length.out = 1000)
df <- data.frame(x = x, y = f_neg(x))
# Plot the function using ggplot2
ggplot(data = df, aes(x = x, y = y)) +
geom_line(color = "blue") +
xlab("x") +
ylab("f(x)") +
ggtitle("f(x) = exp(0.2*x)*cos(x)")
# find maxima using optim over the domain x = -10:10
# Create an empty vector to store the minima
maxima <- c()
# Find minima using optim over the domain x = -10:10
x = -10
repeat {
# Compute the minimum and store it in the minima vector
max <- optim(x, f_neg, method = "CG")$par
maxima <- append(maxima, max)
# Print the result
print(paste("for x = ", x," the closest maximum is at x =", min))
# Update the x value
x = x + 2.5
# Exit the loop if x exceeds 10
if (x > 10) break("X limit reached")
}
# Find the unique values in the (rounded) minima vector - NB: Rounded as the CG method approximates
unique_maxima <- unique(round(maxima, 3))
print(unique_maxima)
# find maxima using optim over the domain x = -10:10
# Create an empty vector to store the minima
maxima <- c()
# Find minima using optim over the domain x = -10:10
x = -10
repeat {
# Compute the minimum and store it in the minima vector
max <- optim(x, f_neg, method = "CG")$par
maxima <- append(maxima, max)
# Print the result
print(paste("for x = ", x," the closest maximum is at x =", max))
# Update the x value
x = x + 2.5
# Exit the loop if x exceeds 10
if (x > 10) break("X limit reached")
}
# Find the unique values in the (rounded) minima vector - NB: Rounded as the CG method approximates
unique_maxima <- unique(round(maxima, 3))
print(unique_maxima)
# Find the unique values in the (rounded) maxima vector - NB: Rounded as the CG method approximates
unique_maxima <- unique(round(maxima, 3))
print(unique_maxima)
set.seed(10) # random seed to reproduce results
n <- 200 # number of rows in the design matrix
x_0 <- rnorm(n, mean = 10, sd = 5) #  200x1 predictor_0 matrix
x_1 <- rnorm(n, mean = 3, sd = 2) #  200x1 predictor_1 matrix
x_2 <- rnorm(n, mean = 17, sd = 0.5) #  200x1 predictor_2 matrix
x_3 <- rnorm(n, mean = 4, sd = 1) #  200x1 predictor_3 matrix
X_matrix <- cbind(rep(1, n), x_0, x_1, x_2, x_3)    # adding a column of 1s as intercept to the design matrix X (100 x 1)
View(X_matrix)
y <- rnorm(n, mean = (x_0)*2 - (x_1)*6 + (x_2)*0.5 - x_3, sd  =3 )  # our outcome variable, a 200x1 vector
theta <- rep(0,4)               # set up the initial theta 2 x 1 vector
theta <- rep(0,5)               # set up the initial theta 4 x 1 vector (4 coefficients)
loss_function <-function(X, y, par){
n <- length(y)
loss <- sum((X%*%par - y)^2)/(n-length(par))
return(loss)
}
coef <- optim(par = theta, fn = loss_function , X = X_matrix, y = y, method = "BFGS")
coef$par
coef <- optim(par = theta, fn = loss_function , X = X_matrix, y = y, method = "BFGS")
coef$par
coef <- optim(par = theta, fn = loss_function , X = X_matrix, y = y, method = "CG")
coef$par
f <- function(x1,y1){
f_x <- (1-x1)^2 + 100*(y1- x1^2)^2
return(f_x)
}
x <- seq(-2,2,by=.15)
y <- seq(-1,3,by=.15)
z <- outer(x,y,f) #All possible combination of x,y is used to calculate all possible f(x,y) = z.
#how to plot 3D
persp(x,y,z,phi=45,theta=-45,col="green",shade=.00000001,ticktype="detailed")
View(z)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 1)
y = a + bx + rnorm(n, mean = 0, sd = sd)
}
my_function(0, 1, 100, 2)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 1)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
}
my_function(0, 1, 100, 2)
data <- my_function(0, 1, 100, 2)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 1)
}
data <- my_function(0, 1, 100, 2)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
}
data <- my_function(0, 1, 100, 2)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
data$x_vals <- x
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data$y_vals <- y
}
data <- my_function(0, 1, 100, 2)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
data$x_vals <- x
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data$y_vals <- y
}
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
data$x_vals <- x
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data$y_vals <- y
}
my_function(0, 1, 100, 2)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
append(data$x_vals <- x)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
append(data$y_vals <- y)
}
my_function(0, 1, 100, 2)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = data.frame(x_vals = x, y_vals = y)
}
data
View(df)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = data.frame(x_vals = x, y_vals = y)
}
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = data.frame(x_vals = x, y_vals = y)
}
data <- my_function(1,2,100,3)
View(data)
View(data)
```{r}
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = data.frame(x = x, y = y)
}
data <- my_function(1,2,100,3)
View(data)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = data.frame(x = x, y = y)
plot(data$x,data$y)
}
data <- my_function(1,2,100,3)
my_function(1,2,100,10)
my_function(1,2,100,20)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = data.frame(x = x, y = y)
plot(data$x,data$y)
lines(data$x, a*x+b)
}
my_function(1,2,100,20)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = data.frame(x = x, y = y)
plot(data$x,data$y)
lines(data$x, a+b*x)
}
my_function(1,2,100,20)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = data.frame(x = x, y = y)
plot(data$x,data$y)
stan_glm(y ~ x, data=data)
}
my_function(1,2,100,20)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = data.frame(x = x, y = y)
plot(data$x,data$y)
lm(y ~ x, data=data)
}
my_function(1,2,100,20)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = data.frame(x = x, y = y)
plot(data$x,data$y)
lm(y ~ x, data=data)
}
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = data.frame(x = x, y = y)
plot(data$x,data$y)
regression = lm(y ~ x, data=data)
plot(regression)
}
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = data.frame(x = x, y = y)
plot(data$x,data$y)
regression = lm(y ~ x, data=data)
plot(regression)
}
my_function(1,2,100,20)
?lm()
regression$coefficients
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = data.frame(x = x, y = y)
plot(data$x,data$y)
regression = lm(y ~ x, data=data)
plot(regression$coefficients)
}
my_function(1,2,100,20)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = data.frame(x = x, y = y)
plot(data$x,data$y)
regression = lm(y ~ x, data=data)
plot(regression$coef1 + (regression$coef2)*x)
}
my_function(1,2,100,20)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = data.frame(x = x, y = y)
plot(data$x,data$y)
regression = lm(y ~ x, data=data)
plot(regression$coef1 + (regression$coef2)*data$x)
}
my_function(1,2,100,20)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = data.frame(x = x, y = y)
plot(data$x,data$y)
regression = lm(y ~ x, data=data)
plot(regression$coef1 + (regression$coef2)*data$x)
}
my_function(1,2,100,20)
plot(regression$coef1 + (regression$coef2)*data$x, xlim = 0:100)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = data.frame(x = x, y = y)
plot(data$x,data$y)
regression = lm(y ~ x, data=data)
plot(regression$coef1 + (regression$coef2)*data$x, xlim = 0:100)
}
my_function(1,2,100,20)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = data.frame(x = x, y = y)
plot(data$x,data$y)
regression = lm(y ~ x, data=data)
plot(regression$coef1 + (regression$coef2)*data$x, xlim = 0:100)
}
my_function(1,2,100,20)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = data.frame(x = x, y = y)
plot(data$x,data$y)
regression = lm(y ~ x, data=data)
plot(regression$coef1 + (regression$coef2)*data$x, xlim = c(0,100))
}
my_function(1,2,100,20)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = data.frame(x = x, y = y)
plot(data$x,data$y)
regression = lm(y ~ x, data=data)
plot(regression$coef1 + (regression$coef2)*data$x, xlim = c(0,100), ylim = min(data$y):max(data$y))
}
my_function(1,2,100,20)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = data.frame(x = x, y = y)
plot(data$x,data$y)
regression = lm(y ~ x, data=data)
plot(regression$coef1 + (regression$coef2)*data$x, xlim = c(0,100), ylim = c(min(data$y), max(data$y)))
}
my_function(1,2,100,20)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = data.frame(x = x, y = y)
plot(data$x,data$y)
lines(x, a+b*x)
}
my_function(1,2,100,20)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = data.frame(x = x, y = y)
plot(data$x,data$y)
lines(x, a+b*x)
xlab("X")
ylab("Y")
}
my_function(1,2,100,20)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = data.frame(x = x, y = y)
plot(x,y)
lines(x, a+b*x)
}
my_function(1,2,100,20)
data <-  my_function(1,2,100,20)
data <-  my_function(1,2,100,20)
data <-  my_function(1,2,100,20)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
plot(x,y)
lines(x, a+b*x)
}
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
plot(x,y)
lines(x, a+b*x)
}
my_function(1,2,100,20)
my_function(10,7.5,1000,20)
my_function(10,7.5,50,20)
my_function(10,12,50,20)
my_function(10,12,50,100)
my_function(10,12,50,1000)
my_function(10,12,50,500)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
plot(x,y)
lines(x, a+b*x)
return(x,y)
}
my_function(10,12,50,500)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
plot(x,y)
lines(x, a+b*x)
return(y)
}
my_function(10,12,50,500)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
plot(x,y)
lines(x, a+b*x)
data = tibble(x,y)
return(data)
}
my_function(10,12,50,500)
my_function(10,12,50,20)
my_function(0,5,3,20)
my_function(0,5,10,20)
my_function_2 = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = tibble(x,y)
return(data)
plot(x,y)
lm(y ~ x)
}
my_function_2(0,5,10,20)
my_function_2 = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = tibble(x,y)
return(data)
plot(data$x,data$y)
lm(y ~ x)
}
my_function_2 = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
data = tibble(x,y)
return(data)
plot(data$x,data$y)
lm(y ~ x)
}
my_function_2(0,5,10,20)
my_function_2 = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
plot(x,y)
lm(y ~ x)
data = tibble(x,y)
return(data)
}
my_function_2 = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
plot(x,y)
lm(y ~ x)
data = tibble(x,y)
return(data)
}
my_function_2(0,5,10,20)
View(coef)
data <- my_function_2(0,5,10,20)
View(data)
lm(y ~ x, data = data)
model <- lm(y ~ x, data = data)
lm
model
model$coefficients
model$coefficients[1]
my_function_2 = function(a, b, n, sd) {
my_function_2 = function(a, b, n, sd) {
my_function_2 = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
plot(x,y)
lm(y ~ x)
lines(coefficients[1] + x* coefficients[2])
data = tibble(x,y)
return(data) }
my_function_2(0,5,10,20)
my_function_2 = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
plot(x,y)
lm(y ~ x)
lines(coefficients[1] + x* coefficients[2])
data = tibble(x,y)
return(data) }
my_function_2(0,5,10,20)
my_function_2 = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
plot(x,y)
lm(y ~ x)
lines(coefficients[1] + x* coefficients[2])
data = tibble(x,y)
return(data) }
my_function_2(0,5,10,20)
print(my_function_2(0,5,10,20))
my_function_2 = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
plot(x,y)
lm(y ~ x)
lines(coefficients[1] + x* coefficients[2])
data = tibble(x,y)
return(data) }
print(my_function_2(0,5,10,20))
my_function_2 = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
plot(x,y)
lm_fit <- lm(y ~ x)
lines(lm_fit$coefficients[1] + x* lm_fit$coefficients[2])
data = tibble(x,y)
print(data)
return(list(plot = plot(x, y), data = data))
}
print(my_function_2(0,5,10,20))
x = runif(n, min = 0, max = 100)
my_function_2 = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
plot(x,y)
lm_fit <- lm(y ~ x)
lines(lm_fit$coefficients[1] + x* lm_fit$coefficients[2])
data = tibble(x,y)
print(data)
return(list(plot = plot(x, y), data = data))
}
print(my_function_2(0,5,10,20))
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
plot(x,y)
lines(x, a+b*x)
data = tibble(x,y)
return(data)
}
my_function(0,5,10,20)
my_function = function(a, b, n, sd) {
x = runif(n, min = 0, max = 100)
y = a + b*x + rnorm(n, mean = 0, sd = sd)
plot(x,y)
lines(x, a+b*x)
data = tibble(x,y)
return(data)
}
my_function(0,5,10,20)
